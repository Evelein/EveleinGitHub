require 'open-uri'
require 'nokogiri'
require 'csv'

NAME = "//div[@class='b-product-title']//h1[@itemprop='name']/text()"
PRICE = "//div[@class='i-layout-row']//div[@class='b-product-control__row']/span[contains(@class,'b-product-control__text')]/text()"
IMAGE = "(//div[contains(@class, 'b-product-photo')]//figure[contains(@itemprop,'associatedMedia') or contains(@itemprop,'image')])[1]//img/@src"
LINKS = "//li[@class='viewer-type-card__li ']//a[contains(@class,'item-type-card__link--main')]/@href"
PAGES = "//li[contains(@class,'pg-last')]/@data-value"
SELECT = "//div[@class='i-layout-row']//button[contains(@class,'i-button_orange')]"

url = "https://oz.by/pens/"

def html(url)
	Nokogiri::HTML(open(url))
end

def pages(page)
 	page.xpath(PAGES).to_s
end


def links(page)
	page.xpath(LINKS).to_a
end

def info(link)
	page = html("https://oz.by#{link}")
	massiv = Array.new
	page.xpath(SELECT).each do |selected|
		selection = Array.new
		selection.push(page.xpath(NAME).to_s)
		selection.push(page.xpath(PRICE).to_s[/(\w+,\w+)/,1])
		selection.push(page.xpath(IMAGE).to_s)
		massiv.push(selection)
	end
	massiv
end

def csv_file(massiv)
	CSV.open("file.csv", "a+", {:col_sep => ";"}) do |csv|
		massiv.each do |selection|
			csv << selection
		end
	end
end

for page in 1..pages(html(url)).to_i
  html_page = html("#{url}?p=#{page}")
  links(html_page).each { |link|
    csv_file info(link)
  }
end
